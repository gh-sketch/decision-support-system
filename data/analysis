import pandas as pd
import warnings
from sklearn.preprocessing import MinMaxScaler
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression

warnings.filterwarnings('ignore')

data = pd.read_csv('diabetes_data.csv', sep=',')  # загрузка данных для обучения
# замена текстовых данных на числовые
changed_data = {'No': 0, 'Yes': 1, 'Positive': 1, 'Negative': 0}
data = data.replace(changed_data)

# деление обучающих данных на входные и выходные
output = 'class'
y = data[output]  # выходные данные (результат)
x1 = data.drop('Genital thrush', axis=1)
x2 = x1.drop('Gender', axis=1)  # убрали некоторые данные
x = x2.drop(output, axis=1)  # входные данные (симптомы)

# нормализация данных. приведение возрастов к диапазону от 0 до 1
scaler = MinMaxScaler()
scaler.fit(x)
sc_data = scaler.transform(x)
sc_data = pd.DataFrame(sc_data, columns=x.columns)  # преобразование получившегося массива данных в таблицу
#print(sc_data)

# разделение данных для обучения (60%) валидации (20%) и тестирования (20%)
x_train_val, x_test, y_train_val, y_test = train_test_split(sc_data, y, test_size=0.2, random_state=10)
x_train, x_val, y_train, y_val = train_test_split(x_train_val, y_train_val, test_size=0.25, random_state=10)

lr = LogisticRegression(solver='liblinear', multi_class='ovr')
lr.fit(x_train, y_train)

lr_pred = lr.predict(x_test)


#print("Достоверность 1", lr.score(x_train, y_train) * 100)
#print("Достоверность 2", lr.score(x_test, y_test) * 100)
#print("Достоверность 3", accuracy_score(y_test, lr_pred) * 100)
